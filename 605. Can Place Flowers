class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        int flowerbedLen = flowerbed.size();

        if (flowerbedLen == 1) {
            if (flowerbed.at(0) == 1 && n > 0) {
                return false;
            } else {
                if (n > 1) {
                    return false;
                }
                return true;
            }
        }

        for(int i = 0; i < flowerbedLen; i++) {
            if (i == 0) {
                if(flowerbed.at(1) == 0 && flowerbed.at(i) == 0) {
                    n--;
                    flowerbed.at(i) = 1;
                }
            }
            else if (i == (flowerbedLen - 1)) {
                if (flowerbed.at(i - 1) == 0 && flowerbed.at(i) == 0) {
                    n--;
                    flowerbed.at(i) = 1;
                }
            }

            else {
                if (flowerbed.at(i - 1) == 0 && flowerbed.at(i + 1) == 0 && flowerbed.at(i) == 0) {
                    n--;
                    flowerbed.at(i) = 1;
                }
            }

        }

        return (n <= 0);

    }
};
