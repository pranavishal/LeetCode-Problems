class Solution {
public:
    int maxArea(vector<int>& height) {
        int leftIndex = 0;
        int rightIndex = height.size() - 1;
        int maxArea = (height[leftIndex] <= height[rightIndex]) ? 
        (height[leftIndex] * (rightIndex - leftIndex)) :  (height[rightIndex] * (rightIndex - leftIndex));

        int currentArea = maxArea;

        while(leftIndex + 1 < rightIndex) {
            if(height[leftIndex] < height[rightIndex]) {
                leftIndex++;
            } else {
                rightIndex--;
            }
            currentArea = (height[leftIndex] <= height[rightIndex]) ? 
            (height[leftIndex] * (rightIndex - leftIndex)) :  (height[rightIndex] * (rightIndex - leftIndex));

            maxArea = (currentArea > maxArea) ? currentArea : maxArea;
        
        }
        return maxArea;
    }
};
